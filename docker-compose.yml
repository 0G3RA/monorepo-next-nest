name: plinks-pw
networks:
  plinks-pw:
    name: plinks-pw
services:
  plinks-pw-postgres:
    image: postgres
    hostname: postgres
    container_name: plinks-pw-postgres
    ports: ['${POSTGRES_PORT:?}:5432']
    volumes: ['plinks-pw-postgres:/var/lib/postgresql/data']
    networks: ['plinks-pw']
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
      POSTGRES_DB: ${POSTGRES_DB:?}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      start_period: 10s
  plinks-pw-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP: api
        NODE_ENV: production
    container_name: plinks-pw-api
    ports: ['${API_PORT:?}:3001']
    depends_on:
      plinks-pw-postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@plinks-pw-postgres:5432/${POSTGRES_DB}
      - NODE_ENV=production
    networks: ['plinks-pw']    
  plinks-pw-web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        NODE_ENV: production
    container_name: plinks-pw-web
    ports: ['${WEB_PORT:?}:3000']  # Зовнішній порт змінний, внутрішній залишається 3000
    environment:
      - NEXT_PUBLIC_API_URL=http://plinks-pw-api:3001
      - NODE_ENV=production
      - PORT=3000  # Додаємо явне вказання порту для Next.js
    networks: ['plinks-pw']

volumes:
  plinks-pw-postgres: